<?xml version="1.0"?>
<!-- Launches gazebo, rviz and the controllers together
Basically does the same thing as launching gripx_control.lauch and gazebo.launch one after another-->
<launch>
  <arg name="model" default="$(find gripx_description)/urdf/gripx_gazebo.urdf"/>

  <arg name="gui" default="true" />
  <arg name="rvizconfig" default="$(find gripx_description)/rviz/urdf.rviz" />

  <include file="$(find gripx_gazebo)/launch/gazebo.launch">
    <arg name="model" value="$(arg model)" />
  </include>

  <node name="rviz" pkg="rviz" type="rviz" args="-d $(arg rvizconfig)" />
 <!-- Loads the joint controller from the yaml file in the namespace ns -->
  <rosparam command="load"
            file="$(find gripx_control)/config/kinova_joint_state.yaml"
            ns="gripx_joint_state_controller" />

  <!-- Load the position controller -->
   <rosparam command="load"
            file="$(find gripx_control)/config/kinova_position.yaml"
            ns="gripx_position_state_controller" />

  <node name="gripx_controller_spawner" pkg="controller_manager" type="spawner" 
    args="gripx_joint_state_controller
          gripx_position_state_controller
          --shutdown-timeout 10"/>


  <!-- convert joint states to TF transforms for rviz, etc -->
<!--   <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher"
    respawn="false" output="screen">
    <remap from="/joint_states" to="/gripx/joint_states" />
  </node> -->

<!--   <param name="robot_description" command="$(find xacro)/xacro $(arg model)" />
 -->
  <!-- <node if="$(arg gui)" name="joint_state_publisher" pkg="joint_state_publisher_gui" type="joint_state_publisher_gui" />
  <node unless="$(arg gui)" name="joint_state_publisher" pkg="joint_state_publisher" type="joint_state_publisher" />
  <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher" />
  <node name="rviz" pkg="rviz" type="rviz" args="-d $(arg rvizconfig)" required="true" />
 -->
<!--       
  <node name="rqt_robot_steering" pkg="rqt_robot_steering" type="rqt_robot_steering">
    <param name="default_topic" value="/kinova_joint_state_controller/cmd_vel"/>
  </node>
-->
</launch>
